{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@flamarkt/taxonomies/webpack/bootstrap","webpack://@flamarkt/taxonomies/webpack/runtime/compat get default export","webpack://@flamarkt/taxonomies/webpack/runtime/define property getters","webpack://@flamarkt/taxonomies/webpack/runtime/hasOwnProperty shorthand","webpack://@flamarkt/taxonomies/webpack/runtime/make namespace object","webpack://@flamarkt/taxonomies/external root \"flarum.core.compat['admin/app']\"","webpack://@flamarkt/taxonomies/external root \"flarum.core.compat['common/extend']\"","webpack://@flamarkt/taxonomies/external root \"flarum.core.compat['admin/components/PermissionDropdown']\"","webpack://@flamarkt/taxonomies/external root \"flarum.core.compat['common/components/Button']\"","webpack://@flamarkt/taxonomies/./src/admin/makeEveryoneMeansDisabledUsers.ts","webpack://@flamarkt/taxonomies/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/PermissionDropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import {Vnode} from 'mithril';\nimport app from 'flarum/admin/app';\nimport {extend} from 'flarum/common/extend';\nimport PermissionDropdown from 'flarum/admin/components/PermissionDropdown';\nimport Button from 'flarum/common/components/Button';\n\nconst translationPrefix = 'flamarkt-taxonomies.admin.permissions.';\n\n// Since not activated / suspended users are considered guests, we allow a guest option on some settings\n// However showing \"Everyone\"/\"Members\" is just confusing, so we will alter the labels on those permissions\nexport default function (permissionsWhereEveryoneMeansDisabledUsers: string[]) {\n    extend(PermissionDropdown.prototype, 'view', function (vdom) {\n        if (permissionsWhereEveryoneMeansDisabledUsers.indexOf(this.attrs.permission) === -1) {\n            return;\n        }\n\n        // Loops through <ul> children\n        vdom.children[1].children.forEach((vdom: Vnode) => {\n            // Checks we are in <li> <Button> <icon>\n            if (\n                vdom.tag !== 'li' ||\n                vdom.children[0].tag !== Button ||\n                !vdom.children[0].children ||\n                vdom.children[0].children.length !== 3\n            ) {\n                return;\n            }\n\n            const {icon} = vdom.children[0].children[0].attrs;\n\n            if (icon === 'fas fa-globe') {\n                vdom.children[0].children[2] = [\n                    app.translator.trans(translationPrefix + 'ownDisabledEveryone'),\n                ];\n            }\n\n            if (icon === 'fas fa-user') {\n                vdom.children[0].children[2] = [\n                    app.translator.trans(translationPrefix + 'ownDisabledMembers'),\n                ];\n            }\n        });\n    });\n}\n","import app from 'flarum/admin/app';\nimport makeEveryoneMeansDisabledUsers from './makeEveryoneMeansDisabledUsers';\n\nconst translationPrefix = 'flamarkt-taxonomies.admin.permissions.';\n\n// Unique initializer name because we will register this file in both frontends and there will already be a flamarkt-taxonomies initializer\napp.initializers.add('flamarkt-taxonomies-admin', () => {\n    makeEveryoneMeansDisabledUsers([\n        'user.seeOwnTaxonomy',\n        'user.editOwnTaxonomy',\n    ]);\n\n    app.extensionData.for('flamarkt-taxonomies')\n        .registerPermission({\n            icon: 'fas fa-tag',\n            label: app.translator.trans(translationPrefix + 'moderate'),\n            permission: 'taxonomies.moderate',\n        }, 'moderate')\n        .registerPermission({\n            icon: 'fas fa-tag',\n            label: app.translator.trans(translationPrefix + 'bypassTermCounts'),\n            permission: 'taxonomies.bypassTermCounts',\n        }, 'moderate')\n        .registerPermission({\n            icon: 'fas fa-eye',\n            label: app.translator.trans(translationPrefix + 'seeOwnDiscussion'),\n            permission: 'discussion.seeOwnTaxonomy',\n        }, 'view')\n        .registerPermission({\n            icon: 'fas fa-eye',\n            label: app.translator.trans(translationPrefix + 'seeAnyDiscussion'),\n            permission: 'discussion.seeAnyTaxonomy',\n            allowGuest: true,\n        }, 'view')\n        .registerPermission({\n            icon: 'fas fa-eye',\n            label: app.translator.trans(translationPrefix + 'seeOwnUser'),\n            permission: 'user.seeOwnTaxonomy',\n            allowGuest: true,\n        }, 'view')\n        .registerPermission({\n            icon: 'fas fa-eye',\n            label: app.translator.trans(translationPrefix + 'seeAnyUser'),\n            permission: 'user.seeAnyTaxonomy',\n            allowGuest: true,\n        }, 'view')\n        .registerPermission({\n            icon: 'fas fa-tag',\n            label: app.translator.trans(translationPrefix + 'editOwnDiscussion'),\n            permission: 'discussion.editOwnTaxonomy',\n        }, 'reply')\n        .registerPermission({\n            icon: 'fas fa-tag',\n            label: app.translator.trans(translationPrefix + 'editAnyDiscussion'),\n            permission: 'discussion.editAnyTaxonomy',\n        }, 'reply')\n        .registerPermission({\n            icon: 'fas fa-tag',\n            label: app.translator.trans(translationPrefix + 'editOwnUser'),\n            permission: 'user.editOwnTaxonomy',\n            allowGuest: true,\n        }, 'reply')\n        .registerPermission({\n            icon: 'fas fa-tag',\n            label: app.translator.trans(translationPrefix + 'editAnyUser'),\n            permission: 'user.editAnyTaxonomy',\n        }, 'reply');\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","translationPrefix","app","permissionsWhereEveryoneMeansDisabledUsers","extend","PermissionDropdown","vdom","indexOf","this","attrs","permission","children","forEach","tag","Button","length","icon","registerPermission","label","allowGuest"],"sourceRoot":""}